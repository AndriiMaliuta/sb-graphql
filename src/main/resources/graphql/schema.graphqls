type Query {
    author(id: Int): Author
    book(id: Int): Book
#    artifactRepositories : [ArtifactRepository]
#    artifactRepository(id : ID!) : ArtifactRepository
    authors(count: Int): [Author]
    books(count: Int): [Book]
    googleBooks(count: Int, volume: String, start: Int): BooksResponse
}
type BooksResponse {
    kind: String
    totalItems: Int
    items: [BookResponse]
}
type BookResponse {
    kind: String
    id: String
    etag: String
    selfLink: String
    volumeInfo: VolumeInfo
}

type VolumeInfo {
    title:String
    authors: [String]
    publisher:String
    publishedDate:String
    description:String
    language: String
    pageCount: Int
}

type Author {
    id: Int
    name: String
}

type Book {
    id: Int
    title: String
    author: Author
}

#type Mutation {
#    writePost(title: String!, text: String!, category: String) : Post!
#}

#type ArtifactRepository {
#    id: ID!
#    name: String!
#    url: String!
#    snapshotsEnabled: Boolean
#}
#
#type Project {
#    slug: ID!
#    name: String!
#    repositoryUrl: String!
#    status: ProjectStatus!
#    releases: [Release]
#}
#
#type Release {
#    version: String!
#    status: ReleaseStatus!
#    current: Boolean
#}
#
#enum ProjectStatus {
#    ACTIVE
#    COMMUNITY
#    INCUBATING
#    ATTIC
#}
#
#enum ReleaseStatus {
#    GENERAL_AVAILABILITY
#    MILESTONE
#    SNAPSHOT
#}